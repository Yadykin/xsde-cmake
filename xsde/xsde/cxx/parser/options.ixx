// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace CXX
{
  namespace Parser
  {
    // options
    //

    inline const NarrowStrings& options::
    type_map () const
    {
      return this->type_map_;
    }

    inline NarrowStrings& options::
    type_map ()
    {
      return this->type_map_;
    }

    inline void options::
    type_map(const NarrowStrings& x)
    {
      this->type_map_ = x;
    }

    inline const bool& options::
    suppress_validation () const
    {
      return this->suppress_validation_;
    }

    inline bool& options::
    suppress_validation ()
    {
      return this->suppress_validation_;
    }

    inline void options::
    suppress_validation(const bool& x)
    {
      this->suppress_validation_ = x;
    }

    inline const bool& options::
    reuse_style_mixin () const
    {
      return this->reuse_style_mixin_;
    }

    inline bool& options::
    reuse_style_mixin ()
    {
      return this->reuse_style_mixin_;
    }

    inline void options::
    reuse_style_mixin(const bool& x)
    {
      this->reuse_style_mixin_ = x;
    }

    inline const bool& options::
    reuse_style_none () const
    {
      return this->reuse_style_none_;
    }

    inline bool& options::
    reuse_style_none ()
    {
      return this->reuse_style_none_;
    }

    inline void options::
    reuse_style_none(const bool& x)
    {
      this->reuse_style_none_ = x;
    }

    inline const bool& options::
    generate_polymorphic () const
    {
      return this->generate_polymorphic_;
    }

    inline bool& options::
    generate_polymorphic ()
    {
      return this->generate_polymorphic_;
    }

    inline void options::
    generate_polymorphic(const bool& x)
    {
      this->generate_polymorphic_ = x;
    }

    inline const bool& options::
    runtime_polymorphic () const
    {
      return this->runtime_polymorphic_;
    }

    inline bool& options::
    runtime_polymorphic ()
    {
      return this->runtime_polymorphic_;
    }

    inline void options::
    runtime_polymorphic(const bool& x)
    {
      this->runtime_polymorphic_ = x;
    }

    inline const bool& options::
    generate_noop_impl () const
    {
      return this->generate_noop_impl_;
    }

    inline bool& options::
    generate_noop_impl ()
    {
      return this->generate_noop_impl_;
    }

    inline void options::
    generate_noop_impl(const bool& x)
    {
      this->generate_noop_impl_ = x;
    }

    inline const bool& options::
    generate_print_impl () const
    {
      return this->generate_print_impl_;
    }

    inline bool& options::
    generate_print_impl ()
    {
      return this->generate_print_impl_;
    }

    inline void options::
    generate_print_impl(const bool& x)
    {
      this->generate_print_impl_ = x;
    }

    inline const bool& options::
    generate_test_driver () const
    {
      return this->generate_test_driver_;
    }

    inline bool& options::
    generate_test_driver ()
    {
      return this->generate_test_driver_;
    }

    inline void options::
    generate_test_driver(const bool& x)
    {
      this->generate_test_driver_ = x;
    }

    inline const bool& options::
    force_overwrite () const
    {
      return this->force_overwrite_;
    }

    inline bool& options::
    force_overwrite ()
    {
      return this->force_overwrite_;
    }

    inline void options::
    force_overwrite(const bool& x)
    {
      this->force_overwrite_ = x;
    }

    inline const bool& options::
    root_element_first () const
    {
      return this->root_element_first_;
    }

    inline bool& options::
    root_element_first ()
    {
      return this->root_element_first_;
    }

    inline void options::
    root_element_first(const bool& x)
    {
      this->root_element_first_ = x;
    }

    inline const bool& options::
    root_element_last () const
    {
      return this->root_element_last_;
    }

    inline bool& options::
    root_element_last ()
    {
      return this->root_element_last_;
    }

    inline void options::
    root_element_last(const bool& x)
    {
      this->root_element_last_ = x;
    }

    inline const NarrowString& options::
    root_element () const
    {
      return this->root_element_;
    }

    inline NarrowString& options::
    root_element ()
    {
      return this->root_element_;
    }

    inline void options::
    root_element(const NarrowString& x)
    {
      this->root_element_ = x;
    }

    inline const NarrowString& options::
    skel_type_suffix () const
    {
      return this->skel_type_suffix_;
    }

    inline NarrowString& options::
    skel_type_suffix ()
    {
      return this->skel_type_suffix_;
    }

    inline void options::
    skel_type_suffix(const NarrowString& x)
    {
      this->skel_type_suffix_ = x;
    }

    inline const NarrowString& options::
    skel_file_suffix () const
    {
      return this->skel_file_suffix_;
    }

    inline NarrowString& options::
    skel_file_suffix ()
    {
      return this->skel_file_suffix_;
    }

    inline void options::
    skel_file_suffix(const NarrowString& x)
    {
      this->skel_file_suffix_ = x;
    }

    inline const NarrowString& options::
    impl_type_suffix () const
    {
      return this->impl_type_suffix_;
    }

    inline NarrowString& options::
    impl_type_suffix ()
    {
      return this->impl_type_suffix_;
    }

    inline void options::
    impl_type_suffix(const NarrowString& x)
    {
      this->impl_type_suffix_ = x;
    }

    inline const NarrowString& options::
    impl_file_suffix () const
    {
      return this->impl_file_suffix_;
    }

    inline NarrowString& options::
    impl_file_suffix ()
    {
      return this->impl_file_suffix_;
    }

    inline void options::
    impl_file_suffix(const NarrowString& x)
    {
      this->impl_file_suffix_ = x;
    }
  }
}

// Begin epilogue.
//
//
// End epilogue.
